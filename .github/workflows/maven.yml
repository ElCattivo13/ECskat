# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCR_PROJECT }}

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup gcloud CLI
      uses: google-github-actions/setup-gcloud@master
      with:
        service_account_key: ${{ secrets.GCR_SA_KEY }}
        project_id: ${{ secrets.GCR_PROJECT }}

    # Configure Docker to use the gcloud command-line tool as a credential helper for authentication
    - name: Configure Docker
      run: |-
        gcloud --quiet auth configure-docker

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'

    - name: Change permission
      run: chmod +x ./mvnw

    - name: Build with Maven
      run: ./mvnw package

#    - name: Show docker config
#      run: more $HOME/.docker/config.json

#    - name: Login to Docker-Hub
#      run: echo ${{ secrets.DOCKER_HUB_PASSWORD }} | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin

    - name: Build with Docker
      run: docker build -f src/main/docker/Dockerfile.jvm -t elcattivo13/ecskat .

#    - name: Push docker image
#      run: docker push elcattivo13/ecskat:latest
